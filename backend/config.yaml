# jwt configuration
jwt:
  signing-key: pddzl
  expires-time: 86400
  buffer-time: 43200
  issuer: pddZl

# zap logger configuration
zap:
  level: debug
  format: console
  prefix: ''
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true

# 日志割接
rotateLogs:
  max-size: 10
  max-backups: 5
  max-age: 7
  compress: false

# system configuration
system:
  env: 'production' # Change to "develop" to skip authentication for development mode
  host: '0.0.0.0'
  port: '5558'
  stack: true
  use-multipoint: false

# mysql configuration
mysql:
  host: '127.0.0.1'
  port: 3306
  config: 'charset=utf8&parseTime=true'
  db-name: 'go_v3_admin'
  username: 'root'
  password: '123.com'
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: false
  log-zap: true

# redis configuration
redis:
  db: 0
  host: 'redis'
  port: 6379
  password: ''

# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80

# 跨域配置
# 需要配合 server/initialize/router.go#L32 使用
cors:
  mode: whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值

# crontab; clear table data
crontab:
  open: true
  spec: "@daily"
  objects:
    - tableName: jwt_blacklists
    - compareField: created_at
    - interval: 168h

# SMTP信息
smtp:
  user: "xxx@xxx.com"
  password: "xxxxxxxx"
  server: "smtp.partner.outlook.cn"
  rec: "xxxx@xxxx.com"      # 系统信息的收件邮箱,支持多个邮箱，逗号分割。eg: aa@qq.com,bb@qq.com
  port: 587
  Starttls: true